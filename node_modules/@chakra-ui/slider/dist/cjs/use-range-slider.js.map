{"version":3,"sources":["../../src/use-range-slider.ts"],"names":["useRangeSlider","props","min","max","onChange","valueProp","value","defaultValue","isReversedProp","isReversed","direction","orientation","idProp","id","isDisabled","isReadOnly","onChangeStartProp","onChangeStart","onChangeEndProp","onChangeEnd","step","getAriaValueTextProp","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","minStepsBetweenThumbs","htmlProps","valueState","setValue","Array","isArray","TypeError","isDragging","setDragging","isFocused","setFocused","activeIndex","setActiveIndex","eventSourceRef","isInteractive","initialValue","map","val","valueRef","spacing","valueBounds","getValueBounds","reversedValue","thumbValues","thumbPercents","isVertical","from","length","width","height","thumbRects","setThumbRects","rootRef","current","thumbs","querySelectorAll","rects","el","offsetWidth","offsetHeight","trackRef","uuid","ids","getValueFromPointer","event","rect","getBoundingClientRect","touches","clientX","clientY","diff","bottom","left","percent","tenSteps","oneStep","actions","setValueAtIndex","index","bounds","parseFloat","next","stepUp","valueAtIndex","stepDown","reset","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","idx","getThumb","thumb","ownerDocument","getElementById","setTimeout","onPanSessionStart","pointValue","distances","Math","abs","isThumbStacked","Set","size","closest","indexOf","onPan","on","onPanSessionEnd","off","getRootProps","ref","root","tabIndex","style","getTrackProps","track","getInnerTrackProps","innerTrack","getThumbProps","rest","_value","role","undefined","onFocus","onBlur","getOutputProps","output","htmlFor","v","i","join","getMarkerProps","isInRange","isHighlighted","markerStyle","position","pointerEvents","vertical","horizontal","getMarker","getInputProps","getInput","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useCallbackRef,\n  useControllableState,\n  useId,\n  useLatestRef,\n  usePanGesture,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { EventKeyMap, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  AnyPointerEvent,\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  focus,\n  normalizeEventKey,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n  const valueRef = useLatestRef(value)\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const [thumbRects, setThumbRects] = useState(\n    Array.from({ length: value.length }).map(() => ({ width: 0, height: 0 })),\n  )\n\n  useEffect(() => {\n    if (!rootRef.current) return\n\n    const thumbs = Array.from(\n      rootRef.current?.querySelectorAll<HTMLElement>(\"[role=slider]\"),\n    )\n    const rects = thumbs.map((el) => ({\n      width: el.offsetWidth,\n      height: el.offsetHeight,\n    }))\n\n    if (rects.length) setThumbRects(rects)\n  }, [])\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const uuid = useId(idProp)\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n      eventSourceRef.current = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions = useMemo(\n    () => ({\n      setValueAtIndex: (index: number, val: number) => {\n        if (!isInteractive) return\n        const bounds = valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset: () => setValue(initialValue.current),\n    }),\n    [oneStep, value, isReversed, setValue, isInteractive, valueBounds],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        eventSourceRef.current = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => focus(thumb))\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEnd?.(valueRef.current)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = value.map((val) => Math.abs(val - pointValue))\n    const isThumbStacked = new Set(distances).size !== distances.length\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the next closest thumb\n    if (isThumbStacked && pointValue > value[index]) {\n      index++\n    }\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging.on()\n      onPanSessionStart(event)\n      onChangeStart?.(valueRef.current)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging.off()\n      onChangeEnd?.(valueRef.current)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...htmlProps,\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: { ...props.style, ...rootStyle },\n    }),\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: { ...props.style, ...trackStyle },\n    }),\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.innerTrack,\n      style: { ...props.style, ...innerTrackStyle },\n    }),\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const _value = value[index]\n      if (_value == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\": getAriaValueText?.(_value) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": _value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused.on()\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused.off()\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\",\n    }),\n    [ids, value],\n  )\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = useCallback(\n    (props = {}, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n      getThumbPercent: (i: number) => thumbPercents[i],\n      getThumbMinValue: (i: number) => valueBounds[i].min,\n      getThumbMaxValue: (i: number) => valueBounds[i].max,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nconst getValueBounds = (\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) =>\n  arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n"],"file":"use-range-slider.js"}