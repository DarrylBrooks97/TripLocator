{"version":3,"sources":["../../src/slider.tsx"],"names":["createContext","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","useTheme","cx","__DEV__","React","useSlider","SliderProvider","useSliderContext","name","errorMessage","Slider","props","ref","styles","ownProps","direction","getInputProps","getRootProps","context","rootProps","inputProps","container","children","defaultProps","orientation","displayName","SliderThumb","getThumbProps","thumbProps","className","thumb","SliderTrack","getTrackProps","trackProps","track","SliderFilledTrack","getInnerTrackProps","filledTrack","SliderMark","getMarkerProps","markProps"],"mappings":"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","sourcesContent":["import { createContext } from \"@chakra-ui/react-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  errorMessage:\n    \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />\",\n})\n\nexport { SliderProvider, useSliderContext }\n\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Slider\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  ownProps.direction = direction\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  return (\n    <SliderProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          {...rootProps}\n          className=\"chakra-slider\"\n          __css={styles.container}\n        >\n          {props.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </StylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.defaultProps = {\n  orientation: \"horizontal\",\n}\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\"\n}\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n  const styles = useStyles()\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={styles.thumb}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderThumb.displayName = \"SliderThumb\"\n}\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n  const styles = useStyles()\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={styles.track}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\"\n}\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n    const styles = useStyles()\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className=\"chakra-slider__filled-track\"\n        __css={styles.filledTrack}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  SliderFilledTrack.displayName = \"SliderFilledTrack\"\n}\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderMark.displayName = \"SliderMark\"\n}\n"],"file":"slider.js"}