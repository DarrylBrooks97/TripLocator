{"version":3,"sources":["../../src/use-range-slider.ts"],"names":["useBoolean","useCallbackRef","useControllableState","useId","useLatestRef","usePanGesture","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","clampValue","dataAttr","focus","normalizeEventKey","percentToValue","roundValueToStep","valueToPercent","useCallback","useEffect","useMemo","useRef","useState","getIds","getIsReversed","getStyles","orient","useRangeSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","isReversedProp","direction","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","minStepsBetweenThumbs","htmlProps","valueState","setValue","Array","isArray","TypeError","isDragging","setDragging","isFocused","setFocused","activeIndex","setActiveIndex","eventSourceRef","isInteractive","initialValue","map","val","valueRef","spacing","valueBounds","getValueBounds","reversedValue","thumbValues","thumbPercents","isVertical","thumbRects","setThumbRects","from","length","width","height","rootRef","current","thumbs","querySelectorAll","rects","el","offsetWidth","offsetHeight","trackRef","uuid","ids","getValueFromPointer","event","rect","getBoundingClientRect","clientX","clientY","touches","diff","bottom","left","percent","tenSteps","oneStep","actions","setValueAtIndex","index","bounds","parseFloat","next","stepUp","valueAtIndex","stepDown","reset","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","idx","getThumb","thumb","ownerDocument","getElementById","setTimeout","onPanSessionStart","pointValue","distances","Math","abs","isThumbStacked","Set","size","closest","indexOf","onPan","on","onPanSessionEnd","off","getRootProps","ref","root","tabIndex","style","getTrackProps","track","getInnerTrackProps","innerTrack","getThumbProps","rest","_value","role","undefined","onFocus","onBlur","getOutputProps","output","htmlFor","v","i","join","getMarkerProps","isInRange","isHighlighted","markerStyle","position","pointerEvents","vertical","horizontal","getMarker","getInputProps","getInput","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useCallbackRef,\n  useControllableState,\n  useId,\n  useLatestRef,\n  usePanGesture,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { EventKeyMap, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  AnyPointerEvent,\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  focus,\n  normalizeEventKey,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n  const valueRef = useLatestRef(value)\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const [thumbRects, setThumbRects] = useState(\n    Array.from({ length: value.length }).map(() => ({ width: 0, height: 0 })),\n  )\n\n  useEffect(() => {\n    if (!rootRef.current) return\n\n    const thumbs = Array.from(\n      rootRef.current?.querySelectorAll<HTMLElement>(\"[role=slider]\"),\n    )\n    const rects = thumbs.map((el) => ({\n      width: el.offsetWidth,\n      height: el.offsetHeight,\n    }))\n\n    if (rects.length) setThumbRects(rects)\n  }, [])\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const uuid = useId(idProp)\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n      eventSourceRef.current = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions = useMemo(\n    () => ({\n      setValueAtIndex: (index: number, val: number) => {\n        if (!isInteractive) return\n        const bounds = valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown: (index: number, step = oneStep) => {\n        const valueAtIndex = value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset: () => setValue(initialValue.current),\n    }),\n    [oneStep, value, isReversed, setValue, isInteractive, valueBounds],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        eventSourceRef.current = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => focus(thumb))\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEnd?.(valueRef.current)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = value.map((val) => Math.abs(val - pointValue))\n    const isThumbStacked = new Set(distances).size !== distances.length\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the next closest thumb\n    if (isThumbStacked && pointValue > value[index]) {\n      index++\n    }\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: AnyPointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging.on()\n      onPanSessionStart(event)\n      onChangeStart?.(valueRef.current)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging.off()\n      onChangeEnd?.(valueRef.current)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...htmlProps,\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: { ...props.style, ...rootStyle },\n    }),\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: { ...props.style, ...trackStyle },\n    }),\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.innerTrack,\n      style: { ...props.style, ...innerTrackStyle },\n    }),\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const _value = value[index]\n      if (_value == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\": getAriaValueText?.(_value) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": _value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused.on()\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused.off()\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\",\n    }),\n    [ids, value],\n  )\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = useCallback(\n    (props = {}, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n      getThumbPercent: (i: number) => thumbPercents[i],\n      getThumbMinValue: (i: number) => valueBounds[i].min,\n      getThumbMaxValue: (i: number) => valueBounds[i].max,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nconst getValueBounds = (\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) =>\n  arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n"],"file":"use-range-slider.js"}